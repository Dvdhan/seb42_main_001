spring:
  h2:
    console:
      enabled: true
      path: /h2
  datasource:
    url: jdbc:h2:mem:test
    initialization-mode: always
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true  # (3) SQL pretty print
        hbm2ddl:
          import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
    open-in-view: false

  sql:
    init:
      data-locations: classpath:db/* #{classpath:article.sql, import.sql} # 경로 변경

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${OAUTH2_CLIENT_ID}
#            "646609229988-u5rorv92gaj6sp4g4t161776dfh7abli.apps.googleusercontent.com"
            clientSecret: ${OAUTH2_CLIENT_SECRET}
#            "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"
            redirectUri: ${OAUTH2_REDIRECT}
            scope:
              - email
              - profile
  redis:
    host: localhost
    port: 6379
#    password: Optional, if Redis requires a password

logging:
  level:
    org:
      springframework:
        orm:
          jpa: DEBUG
mail:
  address:
    admin: han2041126@gmail.com
jwt:
  key:
    secret: ${JWT_SECRET_KEY}
  access-token-expiration-minutes: 60
  refresh-token-expiration-minutes: 1440
#  001mainprojectwithskeyletsgoforitwecandoit

file:
  root:
    dir : /home/ssm-user/image/

#  dir: C:\Users\MEcmp\Desktop\Main_Proj\sampleImgPath #임시로 업로드 이미지 저장하는 디렉토리
# dir : /home/ssm-user/image/

cloud:
  aws:
    s3:
      bucket: ${S3.BUCKET_NAME} #버킷 이름
    credentials:
#      access-key: ${/main001/cloud.aws.s3.credentials.accesskey}
      access-key: ${AWS.ACCESS-KEY}

#      secret-key: ${/main001/cloud.aws.s3.credentials.secretkey}
      secret-key: ${AWS.SECRET-KEY}
    region:
#      static: ${/main001/cloud.aws.region.static}
      static: ${AWS-REGION}
    stack:
      auto: false

#awsParameterStorePropertySource:
#  enabled: true